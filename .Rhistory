"North Lanarkshire",
"Orkney Islands",
"Perth and Kinross",
"Renfrewshire",
"Scottish Borders",
"Shetland Islands",
"South Ayrshire",
"South Lanarkshire",
"Stirling",
"West Dunbartonshire",
"West Lothian"
)
# vector_of_indicators <- c(
#   "Regional Gross Value Added (balanced), Current Prices (  millions)",
#   "Number of VAT and/or PAYE registered private sector enterprises (as at March each year)",
#   "Small (0-49 employees) business share of private sector jobs (as at March each year)",
#   "VAT/PAYE business registrations (Business Births)",
#   "VAT/PAYE business registrations (Business Births) per 10,000 adults (16+)",
#   "VAT/PAYE business de-registrations (Business Deaths)",
#   "VAT/PAYE business de-registrations (Business Deaths) per 10,000 adults (16+)",
#   "3-year business survival (survival of newly born VAT/PAYE  businesses)",
#   "3-year business survival rate (survival rate of newly born VAT/PAYE  businesses)",
#   "Number of foreign-owned registered private sector enterprises (as at March each year)",
#   "Number of EU foreign-owned registered private sector enterprises (as at March each year)",
#   "Foreign-owned business share of private sector jobs (as at March each year)",
#   "EU foreign-owned business share of private sector jobs (as at March each year)",
#   "International Exports Value ( million) (experimental statistics)",
#   "EU International Exports Value ( million) (experimental statistics)",
#   "Business Enterprise Research and Development (BERD) expenditure - Current prices ( million)",
#   "Business Enterprise Research and Development (BERD) Jobs",
#   "Number of high growth registered private sector enterprises (as at March each year)",
#   "Jobs in VAT/PAYE Registered Businesses (workplace-based, private and public sector jobs)",
#   "Number of people in employment (aged 16+) (residence based)",
#   "Working age employment rate (residence based)",
#   "95% confidence interval of percentage of working age employment rate",
#   "Number of people aged 16+ in employment who are self-employed",
#   "Percentage of people aged 16+ in employment who are self-employed",
#   "95% confidence interval of percentage of people aged 16+ in employment who are self-employed",
#   "Number of females aged 16+ in employment who are self-employed",
#   "Percentage of females aged 16+ in employment who are self-employed",
#   "95% confidence interval of percentage of females aged 16+ in employment who are self-employed",
#   "Model-based estimates of unemployment - people aged 16+ unemployed",
#   "Unemployment Rate (Percentage of economically active people aged 16+  who are unemployed)",
#   "95% confidence interval of percentage of unemployment rate",
#   "Median gross weekly pay for full time workers (resident analysis)",
#   "Standard error as a percentage of median gross weekly pay for full time workers (resident analysis)",
#   "Median gross weekly pay for full time workers (workplace analysis)",
#   "Standard error as a percentage of median gross weekly pay for full time workers (workplace analysis)",
#   "Total population estimates",
#   "Population estimates - aged 16+",
#   "Population estimates - working age (16-64)"
# )
vector_of_indicators <- c(
"Gross Value Added",
"VAT/PAYE registered enterprises",
"Small businesses",
"VAT/PAYE (Business Births)",
"VAT/PAYE (Business Births) per 10,000 adults",
"VAT/PAYE (Business Deaths)",
"VAT/PAYE (Business Deaths) per 10,000 adults",
"3-year business survival",
"3-year business survival rate",
"Foreign-owned enterprises",
"Foreign-owned enterprises (EU)",
"Foreign-owned business jobs",
"Foreign-owned business jobs (EU)",
"International Exports Value",
"International Exports Value (EU)",
"BERD",
"BERD Jobs",
"High growth enterprises",
"VAT/PAYE Businesses Jobs",
"Employment",
"Working age employment rate",
"Working age employment rate (95% CI)",
"Self-employed",
"Self-employed rate",
"Self-employed (95% CI)",
"Self-employed Females",
"Self-employed Females rate",
"Self-employed Females rate (95% CI)",
"Unemployment",
"Unemployment rate",
"Unemployment rate (95% CI)",
"Median gross weekly pay (RA)",
"Median gross weekly pay (RA) (SE)",
"Median gross weekly pay (WE)",
"Median gross weekly pay (WE) (SE)",
"Population",
"Population (16+)",
"Population (16-64)"
)
vector_of_regions <- c(
"Scotland",
"Aberdeen City Region",
"Glasgow City Region",
"Edinburgh and South East Scotland City Region",
"Stirling and Clackmannanshire City Region",
"Tay Cities Region",
"Scottish Island Councils",
"Ayrshires",
"South of Scotland"
)
vector_of_ruandurb <- c(
"Scotland",
"Islands & Remote Rural",
"Mainly Rural",
"Urban with Substantial Rural areas",
"Larger Cities"
)
vector_of_enterprise <- c(
"Scotland",
"Highlands and Islands Enterprise",
"Scottish Enterprise"
)
# libraries ####
library(shiny)                # For the app iteslf.
library(shinythemes)          # For the "cerulean" theme.
library(shinyhelper)          # Used for help modal boxes.
library(shinyEffects)         # Used for home page effects.
library(shinyanimate)         # Used for home page effects.
library(shinycssloaders)      # For loaders.
library(magrittr)             # Dependency of other packages. Lets use the pipe operator (%>%).
library(data.table)           # Needed for function na.omit().
library(DT)                   # For the interactive tables.
library(dygraphs)             # For the interactive graphs.
library(leaflet)              # For interactive maps.
library(RColorBrewer)         # Used to create a colour palette for the map.
library(rgdal)                # Needed to load shapfile for the map.
library(plyr)                 # Needed for function revalue(), for editing country names.
library(rmarkdown)            # Used for reports, especially important is function render().
library(knitr)                # Takes Rmd. file and turns it into .md document which includes the R code and itâs output.
library(networkD3)            # Used to create the sankey diagram.
library(treemap)              # Used to create the static treemap.
library(dplyr)                # Used for data manipulation.
library(ggplot2)              # Used for plots in country and sector profiles.
library(plotly)               # Used for the streamgraph.
library(ggsci)                # Used for colour palettes.
library(countrycode)          # Enables conversion from Common country names to ISO codes.
library(knitr)                # Used for sector definitions table
library(kableExtra)           # Used for styling the sector definitions table
library(rsconnect)            # Used for shinyapp.io uploads
library(tidyr)                # Used for data manipulation
library(openxlsx)             # Used to read excel spreadsheets
library(plotly)               # Used for plots
# Dependencies
library(DBI)
library(XML)
library(anytime)
library(backports)
library(broom)
library(cellranger)
library(classInt)
library(cowplot)
library(dbplyr)
library(dichromat)
library(flextable)
library(forcats)
library(fs)
library(gdtools)
library(gtools)
library(haven)
library(leafsync)
library(lubridate)
library(lwgeom)
library(modelr)
library(prettyunits)
library(progress)
library(readxl)
library(reprex)
library(rgeos)
library(rintrojs)
library(rlist)
library(sf)
library(shinyBS)
library(shinyWidgets)
library(shinyalert)
library(shinyjs)
library(tidyverse)
library(tmap)
library(tmaptools)
library(sunburstR)
library(viridis)
# Loading map data ####
mapex <- readOGR(dsn="./www/regional/fwlibrariesandshapefile", layer="Scotland1")
mapex_regions <- readOGR(dsn="./www/regional/fwlibrariesandshapefile_regions", layer="Scotland1")
mapex_regions_data <- mapex_regions@data
OBJECTID <- c(1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
24,
27,
28,
29,
30,
31,
32
)
mapex_regions_data$OBJECTID <- OBJECTID
mapex_regions@data <- mapex_regions_data
# LOCAL AUTHORITIES ####
t1_la <- read.csv("./www/local_authorities/t1.csv", check.names=FALSE)
t2a_la <- read.csv("./www/local_authorities/t2a.csv", check.names=FALSE)
t2b_la <- read.csv("./www/local_authorities/t2b.csv", check.names=FALSE)
t3a_la <- read.csv("./www/local_authorities/t3a.csv", check.names=FALSE)
t3b_la <- read.csv("./www/local_authorities/t3b.csv", check.names=FALSE)
t4a_la <- read.csv("./www/local_authorities/t4a.csv", check.names=FALSE)
t4b_la <- read.csv("./www/local_authorities/t4b.csv", check.names=FALSE)
t5a_la <- read.csv("./www/local_authorities/t5a.csv", check.names=FALSE)
t5b_la <- read.csv("./www/local_authorities/t5b.csv", check.names=FALSE)
t6a_la <- read.csv("./www/local_authorities/t6a.csv", check.names=FALSE)
t6b_la <- read.csv("./www/local_authorities/t6b.csv", check.names=FALSE)
t7a_la <- read.csv("./www/local_authorities/t7a.csv", check.names=FALSE)
t7b_la <- read.csv("./www/local_authorities/t7b.csv", check.names=FALSE)
t8a_la <- read.csv("./www/local_authorities/t8a.csv", check.names=FALSE)
t8b_la <- read.csv("./www/local_authorities/t8b.csv", check.names=FALSE)
t9_la <- read.csv("./www/local_authorities/t9.csv", check.names=FALSE)
t10_la <- read.csv("./www/local_authorities/t10.csv", check.names=FALSE)
t11_la <- read.csv("./www/local_authorities/t11.csv", check.names=FALSE)
t12_la <- read.csv("./www/local_authorities/t12.csv", check.names=FALSE)
t13_la <- read.csv("./www/local_authorities/t13.csv", check.names=FALSE)
t14a_la <- read.csv("./www/local_authorities/t14a.csv", check.names=FALSE)
t14b_la <- read.csv("./www/local_authorities/t14b.csv", check.names=FALSE)
t15a_la <- read.csv("./www/local_authorities/t15a.csv", check.names=FALSE)
t15b_la <- read.csv("./www/local_authorities/t15b.csv", check.names=FALSE)
t15c_la <- read.csv("./www/local_authorities/t15c.csv", check.names=FALSE)
t16a_la <- read.csv("./www/local_authorities/t16a.csv", check.names=FALSE)
t16b_la <- read.csv("./www/local_authorities/t16b.csv", check.names=FALSE)
t16c_la <- read.csv("./www/local_authorities/t16c.csv", check.names=FALSE)
t17a_la <- read.csv("./www/local_authorities/t17a.csv", check.names=FALSE)
t17b_la <- read.csv("./www/local_authorities/t17b.csv", check.names=FALSE)
t17c_la <- read.csv("./www/local_authorities/t17c.csv", check.names=FALSE)
t18a_la <- read.csv("./www/local_authorities/t18a.csv", check.names=FALSE)
t18b_la <- read.csv("./www/local_authorities/t18b.csv", check.names=FALSE)
t19a_la <- read.csv("./www/local_authorities/t19a.csv", check.names=FALSE)
t19b_la <- read.csv("./www/local_authorities/t19b.csv", check.names=FALSE)
t20_la <- read.csv("./www/local_authorities/t20.csv", check.names=FALSE)
t21_la <- read.csv("./www/local_authorities/t21.csv", check.names=FALSE)
t22_la <- read.csv("./www/local_authorities/t22.csv", check.names=FALSE)
t22_la <- read.csv("./www/local_authorities/t22.csv", check.names=FALSE)
summary_tool_la <- read.csv("./www/local_authorities/summary_tool.csv", check.names=FALSE)
# Highlighted indicators for Local Authorities ####
# t1 for leaflet map in Local Authorities (GVA per head) ####
t1_la_long <- t1_la %>%
gather("Year", "Value", 2:ncol(t1_la))
colnames(t1_la_long) <- c("NAME", "Year", "Value")
t1_la_long$Year <- as.numeric(t1_la_long$Year)
start_year_t1_la <- min(t1_la_long$Year)
end_year_t1_la <- max(t1_la_long$Year)
# t3b for leaflet map in Local Authorities (Business registrations per 10,000 adults) ####
t3b_la_long <- t3b_la %>%
gather("Year", "Value", 2:ncol(t3b_la))
colnames(t3b_la_long) <- c("NAME", "Year", "Value")
t3b_la_long$Year <- as.numeric(t3b_la_long$Year)
start_year_t3b_la <- min(t3b_la_long$Year)
end_year_t3b_la <- max(t3b_la_long$Year)
# t4b for leaflet map in Local Authorities (Business de-registrations per 10,000 adults) ####
t4b_la_long <- t4b_la %>%
gather("Year", "Value", 2:ncol(t4b_la))
colnames(t4b_la_long) <- c("NAME", "Year", "Value")
t4b_la_long$Year <- as.numeric(t4b_la_long$Year)
start_year_t4b_la <- min(t4b_la_long$Year)
end_year_t4b_la <- max(t4b_la_long$Year)
# t5b for leaflet map in Local Authorities (Business 3-year survival rate) ####
t5b_la_long <- t5b_la %>%
gather("Year", "Value", 2:ncol(t5b_la))
colnames(t5b_la_long) <- c("NAME", "Year", "Value")
t5b_la_long$Year <- as.numeric(t5b_la_long$Year)
start_year_t5b_la <- min(t5b_la_long$Year)
end_year_t5b_la <- max(t5b_la_long$Year)
# t8a for leaflet map in Local Authorities (International exports per head) ####
t8a_la_long <- t8a_la %>%
gather("Year", "Value", 2:ncol(t8a_la))
colnames(t8a_la_long) <- c("NAME", "Year", "Value")
t8a_la_long$Year <- as.numeric(t8a_la_long$Year)
start_year_t8a_la <- min(t8a_la_long$Year)
end_year_t8a_la <- max(t8a_la_long$Year)
# t9 for leaflet map in Local Authorities (BERD per head) ####
t9_la_long <- t9_la %>%
gather("Year", "Value", 2:ncol(t9_la))
colnames(t9_la_long) <- c("NAME", "Year", "Value")
t9_la_long$Year <- as.numeric(t9_la_long$Year)
start_year_t9_la <- min(t9_la_long$Year)
end_year_t9_la <- max(t9_la_long$Year)
# t14a for leaflet map in Local Authorities (Employment rate) ####
t14a_la_long <- t14a_la %>%
gather("Year", "Value", 2:ncol(t14a_la))
colnames(t14a_la_long) <- c("NAME", "Year", "Value")
t14a_la_long$Year <- as.numeric(t14a_la_long$Year)
start_year_t14a_la <- min(t14a_la_long$Year)
end_year_t14a_la <- max(t14a_la_long$Year)
# t15b for leaflet map in Local Authorities (Self-employment rate) ####
t15b_la_long <- t15b_la %>%
gather("Year", "Value", 2:ncol(t15b_la))
colnames(t15b_la_long) <- c("NAME", "Year", "Value")
t15b_la_long$Year <- as.numeric(t15b_la_long$Year)
start_year_t15b_la <- min(t15b_la_long$Year)
end_year_t15b_la <- max(t15b_la_long$Year)
# t17b for leaflet map in Local Authorities (Unemployment rate) ####
t17b_la_long <- t17b_la %>%
gather("Year", "Value", 2:ncol(t17b_la))
colnames(t17b_la_long) <- c("NAME", "Year", "Value")
t17b_la_long$Year <- as.numeric(t17b_la_long$Year)
start_year_t17b_la <- min(t17b_la_long$Year)
end_year_t17b_la <- max(t17b_la_long$Year)
# t18a for leaflet map in Local Authorities (Median gross weekly pay) ####
t18a_la_long <- t18a_la %>%
gather("Year", "Value", 2:ncol(t18a_la))
colnames(t18a_la_long) <- c("NAME", "Year", "Value")
t18a_la_long$Year <- as.numeric(t18a_la_long$Year)
start_year_t18a_la <- min(t18a_la_long$Year)
end_year_t18a_la <- max(t18a_la_long$Year)
# REGIONS ####
# t1 for barchart in Regions (GVA per head) ####
t1_rg <- read.csv("./www/regions/t1.csv", check.names=FALSE)
t1_rg_long <- t1_rg %>%
gather("Year", "Value", 2:ncol(t1_rg))
colnames(t1_rg_long) <- c("NAME", "Year", "Value")
t1_rg_long$Year <- as.numeric(t1_rg_long$Year)
start_year_t1_rg <- min(t1_rg_long$Year)
end_year_t1_rg <- max(t1_rg_long$Year)
# t3b for barchart in Regions (Business registrations per 10,000 adults) ####
t3b_rg <- read.csv("./www/regions/t3b.csv", check.names=FALSE)
t3b_rg_long <- t3b_rg %>%
gather("Year", "Value", 2:ncol(t3b_rg))
colnames(t3b_rg_long) <- c("NAME", "Year", "Value")
t3b_rg_long$Year <- as.numeric(t3b_rg_long$Year)
start_year_t3b_rg <- min(t3b_rg_long$Year)
end_year_t3b_rg <- max(t3b_rg_long$Year)
# t4b for barchart in Regions (Business de-registrations per 10,000 adults) ####
t4b_rg <- read.csv("./www/regions/t4b.csv", check.names=FALSE)
t4b_rg_long <- t4b_rg %>%
gather("Year", "Value", 2:ncol(t4b_rg))
colnames(t4b_rg_long) <- c("NAME", "Year", "Value")
t4b_rg_long$Year <- as.numeric(t4b_rg_long$Year)
start_year_t4b_rg <- min(t4b_rg_long$Year)
end_year_t4b_rg <- max(t4b_rg_long$Year)
# t5b for barchart in Regions (Business 3-year survival rate) ####
t5b_rg <- read.csv("./www/regions/t5b.csv", check.names=FALSE)
t5b_rg_long <- t5b_rg %>%
gather("Year", "Value", 2:ncol(t5b_rg))
colnames(t5b_rg_long) <- c("NAME", "Year", "Value")
t5b_rg_long$Year <- as.numeric(t5b_rg_long$Year)
start_year_t5b_rg <- min(t5b_rg_long$Year)
end_year_t5b_rg <- max(t5b_rg_long$Year)
# t8a for barchart in Regions (International exports per head) ####
t8a_rg <- read.csv("./www/regions/t8a.csv", check.names=FALSE)
t8a_rg_long <- t8a_rg %>%
gather("Year", "Value", 2:ncol(t8a_rg))
colnames(t8a_rg_long) <- c("NAME", "Year", "Value")
t8a_rg_long$Year <- as.numeric(t8a_rg_long$Year)
start_year_t8a_rg <- min(t8a_rg_long$Year)
end_year_t8a_rg <- max(t8a_rg_long$Year)
# t9 for barchart in Regions (BERD per head) ####
t9_rg <- read.csv("./www/regions/t9.csv", check.names=FALSE)
t9_rg_long <- t9_rg %>%
gather("Year", "Value", 2:ncol(t9_rg))
colnames(t9_rg_long) <- c("NAME", "Year", "Value")
t9_rg_long$Year <- as.numeric(t9_rg_long$Year)
start_year_t9_rg <- min(t9_rg_long$Year)
end_year_t9_rg <- max(t9_rg_long$Year)
# t14a for barchart in Regions (Employment rate) ####
t14a_rg <- read.csv("./www/regions/t14a.csv", check.names=FALSE)
t14a_rg_long <- t14a_rg %>%
gather("Year", "Value", 2:ncol(t14a_rg))
colnames(t14a_rg_long) <- c("NAME", "Year", "Value")
t14a_rg_long$Year <- as.numeric(t14a_rg_long$Year)
start_year_t14a_rg <- min(t14a_rg_long$Year)
end_year_t14a_rg <- max(t14a_rg_long$Year)
# t15b for barchart in Regions (Self-employment rate) ####
t15b_rg <- read.csv("./www/regions/t15b.csv", check.names=FALSE)
t15b_rg_long <- t15b_rg %>%
gather("Year", "Value", 2:ncol(t15b_rg))
colnames(t15b_rg_long) <- c("NAME", "Year", "Value")
t15b_rg_long$Year <- as.numeric(t15b_rg_long$Year)
start_year_t15b_rg <- min(t15b_rg_long$Year)
end_year_t15b_rg <- max(t15b_rg_long$Year)
# t17b for barchart in Regions (Unemployment rate) ####
t17b_rg <- read.csv("./www/regions/t17b.csv", check.names=FALSE)
t17b_rg_long <- t17b_rg %>%
gather("Year", "Value", 2:ncol(t17b_rg))
colnames(t17b_rg_long) <- c("NAME", "Year", "Value")
t17b_rg_long$Year <- as.numeric(t17b_rg_long$Year)
start_year_t17b_rg <- min(t17b_rg_long$Year)
end_year_t17b_rg <- max(t17b_rg_long$Year)
# t18a for barchart in Regions (Median gross weekly pay) ####
t18a_rg <- read.csv("./www/regions/t18a.csv", check.names=FALSE)
t18a_rg_long <- t18a_rg %>%
gather("Year", "Value", 2:ncol(t18a_rg))
colnames(t18a_rg_long) <- c("NAME", "Year", "Value")
t18a_rg_long$Year <- as.numeric(t18a_rg_long$Year)
start_year_t18a_rg <- min(t18a_rg_long$Year)
end_year_t18a_rg <- max(t18a_rg_long$Year)
summary_tool_r <- read.csv("./www/regions/summary_tool.csv", check.names=FALSE)
# RURAL AND URBAN ####
# t1 for barchart in Rural and Urban (GVA per head) ####
t1_ru <- read.csv("./www/rural_and_urban/t1.csv", check.names=FALSE)
t1_ru_long <- t1_ru %>%
gather("Year", "Value", 2:ncol(t1_ru))
colnames(t1_ru_long) <- c("NAME", "Year", "Value")
t1_ru_long$Year <- as.numeric(t1_ru_long$Year)
start_year_t1_ru <- min(t1_ru_long$Year)
end_year_t1_ru <- max(t1_ru_long$Year)
# t3b for barchart in Rural and Urban (Business registrations per 10,000 adults) ####
t3b_ru <- read.csv("./www/rural_and_urban/t3b.csv", check.names=FALSE)
t3b_ru_long <- t3b_ru %>%
gather("Year", "Value", 2:ncol(t3b_ru))
colnames(t3b_ru_long) <- c("NAME", "Year", "Value")
t3b_ru_long$Year <- as.numeric(t3b_ru_long$Year)
start_year_t3b_ru <- min(t3b_ru_long$Year)
end_year_t3b_ru <- max(t3b_ru_long$Year)
# t4b for barchart in Rural and Urban (Business de-registrations per 10,000 adults) ####
t4b_ru <- read.csv("./www/rural_and_urban/t4b.csv", check.names=FALSE)
t4b_ru_long <- t4b_ru %>%
gather("Year", "Value", 2:ncol(t4b_ru))
colnames(t4b_ru_long) <- c("NAME", "Year", "Value")
t4b_ru_long$Year <- as.numeric(t4b_ru_long$Year)
start_year_t4b_ru <- min(t4b_ru_long$Year)
end_year_t4b_ru <- max(t4b_ru_long$Year)
# t5b for barchart in Rural and Urban (Business 3-year survival rate) ####
t5b_ru <- read.csv("./www/rural_and_urban/t5b.csv", check.names=FALSE)
t5b_ru_long <- t5b_ru %>%
gather("Year", "Value", 2:ncol(t5b_ru))
colnames(t5b_ru_long) <- c("NAME", "Year", "Value")
t5b_ru_long$Year <- as.numeric(t5b_ru_long$Year)
start_year_t5b_ru <- min(t5b_ru_long$Year)
end_year_t5b_ru <- max(t5b_ru_long$Year)
# t8a for barchart in Rural and Urban (International exports per head) ####
t8a_ru <- read.csv("./www/rural_and_urban/t8a.csv", check.names=FALSE)
t8a_ru_long <- t8a_ru %>%
gather("Year", "Value", 2:ncol(t8a_ru))
colnames(t8a_ru_long) <- c("NAME", "Year", "Value")
t8a_ru_long$Year <- as.numeric(t8a_ru_long$Year)
start_year_t8a_ru <- min(t8a_ru_long$Year)
end_year_t8a_ru <- max(t8a_ru_long$Year)
# t9 for barchart in Rural and Urban (BERD per head) ####
t9_ru <- read.csv("./www/rural_and_urban/t9.csv", check.names=FALSE)
t9_ru_long <- t9_ru %>%
gather("Year", "Value", 2:ncol(t9_ru))
colnames(t9_ru_long) <- c("NAME", "Year", "Value")
t9_ru_long$Year <- as.numeric(t9_ru_long$Year)
start_year_t9_ru <- min(t9_ru_long$Year)
end_year_t9_ru <- max(t9_ru_long$Year)
# t14a for barchart in Rural and Urban (Employment rate) ####
t14a_ru <- read.csv("./www/rural_and_urban/t14a.csv", check.names=FALSE)
t14a_ru_long <- t14a_ru %>%
gather("Year", "Value", 2:ncol(t14a_ru))
colnames(t14a_ru_long) <- c("NAME", "Year", "Value")
t14a_ru_long$Year <- as.numeric(t14a_ru_long$Year)
start_year_t14a_ru <- min(t14a_ru_long$Year)
end_year_t14a_ru <- max(t14a_ru_long$Year)
# t15b for barchart in Rural and Urban (Self-employment rate) ####
t15b_ru <- read.csv("./www/rural_and_urban/t15b.csv", check.names=FALSE)
t15b_ru_long <- t15b_ru %>%
gather("Year", "Value", 2:ncol(t15b_ru))
colnames(t15b_ru_long) <- c("NAME", "Year", "Value")
t15b_ru_long$Year <- as.numeric(t15b_ru_long$Year)
start_year_t15b_ru <- min(t15b_ru_long$Year)
end_year_t15b_ru <- max(t15b_ru_long$Year)
# t17b for barchart in Rural and Urban (Unemployment rate) ####
t17b_ru <- read.csv("./www/rural_and_urban/t17b.csv", check.names=FALSE)
t17b_ru_long <- t17b_ru %>%
gather("Year", "Value", 2:ncol(t17b_ru))
colnames(t17b_ru_long) <- c("NAME", "Year", "Value")
t17b_ru_long$Year <- as.numeric(t17b_ru_long$Year)
start_year_t17b_ru <- min(t17b_ru_long$Year)
end_year_t17b_ru <- max(t17b_ru_long$Year)
# t18a for barchart in Rural and Urban (Median gross weekly pay) ####
t18a_ru <- read.csv("./www/rural_and_urban/t18a.csv", check.names=FALSE)
t18a_ru_long <- t18a_ru %>%
gather("Year", "Value", 2:ncol(t18a_ru))
colnames(t18a_ru_long) <- c("NAME", "Year", "Value")
t18a_ru_long$Year <- as.numeric(t18a_ru_long$Year)
start_year_t18a_ru <- min(t18a_ru_long$Year)
end_year_t18a_ru <- max(t18a_ru_long$Year)
# data manipulations for time series in local authorities tab
t1_la_wide <- t1_la_long %>%
spread("NAME", "Value", 2:3)
View(t1_la_wide)
View(t1_la_wide)
setwd("D:/regionaleconomicdashboard/regionaleconomicdashboard")
runApp()
setwd("D:/regionaleconomicdashboard/regionaleconomicdashboard")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
